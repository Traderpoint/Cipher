openapi: 3.0.3
info:
  title: Cipher Project API
  description: Comprehensive API for the Cipher Project with enhanced security, backup, and monitoring capabilities
  version: 0.3.0
  contact:
    name: API Support
    url: https://github.com/Traderpoint/Cipher
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3001
    description: Development server
  - url: https://api.cipher.example.com
    description: Production server

security:
  - BearerAuth: []
  - ApiKeyAuth: []

paths:
  # WebSocket Authentication Endpoints
  /api/auth/websocket/token:
    post:
      summary: Generate WebSocket authentication token
      description: Creates a JWT token for WebSocket authentication with specified permissions
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                  description: Optional session identifier
                  example: "session-123"
                userId:
                  type: string
                  description: Optional user identifier
                  example: "user-456"
                permissions:
                  type: array
                  items:
                    type: string
                  description: List of permissions for the WebSocket connection
                  example: ["read", "write", "admin"]
                  default: ["read", "write"]
      responses:
        '200':
          description: Token generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                    description: JWT token for WebSocket authentication
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  clientId:
                    type: string
                    description: Auto-generated client identifier
                    example: "550e8400-e29b-41d4-a716-446655440000"
                  expiresAt:
                    type: string
                    format: date-time
                    description: Token expiration timestamp
                  permissions:
                    type: array
                    items:
                      type: string
                    description: Granted permissions
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/auth/websocket/verify:
    post:
      summary: Verify WebSocket authentication token
      description: Validates a JWT token and returns its payload
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  description: JWT token to verify
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        '200':
          description: Token verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  valid:
                    type: boolean
                    example: true
                  payload:
                    $ref: '#/components/schemas/JWTPayload'
        '400':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  valid:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Invalid token"

  /api/auth/websocket/info:
    get:
      summary: Get WebSocket authentication information
      description: Returns information about WebSocket authentication configuration
      tags:
        - Authentication
      responses:
        '200':
          description: Authentication info retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  info:
                    type: object
                    properties:
                      issuer:
                        type: string
                        example: "cipher-websocket"
                      tokenExpiry:
                        type: string
                        example: "24h"
                      supportedMethods:
                        type: array
                        items:
                          type: string
                        example: ["query", "header", "subprotocol"]
                      websocketUrl:
                        type: string
                        example: "ws://localhost:3001/ws"

  # Backup System Endpoints
  /api/backup/status:
    get:
      summary: Get backup system status
      description: Returns current status and configuration of the backup system
      tags:
        - Backup
      responses:
        '200':
          description: Backup status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  status:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                        example: true
                      activeJobs:
                        type: integer
                        example: 2
                      lastBackup:
                        type: string
                        format: date-time
                      totalBackups:
                        type: integer
                        example: 156
                      totalSize:
                        type: string
                        example: "2.5 GB"
        '503':
          description: Backup manager not initialized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/backup/start:
    post:
      summary: Start a new backup job
      description: Initiates a backup operation with specified configuration
      tags:
        - Backup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
              properties:
                type:
                  type: string
                  enum: [full, incremental, differential]
                  description: Type of backup to perform
                targets:
                  type: array
                  items:
                    type: string
                  description: Specific targets to backup
                  example: ["database", "files", "configurations"]
                options:
                  type: object
                  properties:
                    compression:
                      type: string
                      enum: [none, gzip, brotli, lz4]
                      default: gzip
                    encryption:
                      type: boolean
                      default: true
                    priority:
                      type: string
                      enum: [low, normal, high]
                      default: normal
      responses:
        '200':
          description: Backup job started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  jobId:
                    type: string
                    example: "backup-job-123"
                  status:
                    type: string
                    example: "running"
                  estimatedDuration:
                    type: string
                    example: "15 minutes"

  /api/backup/jobs:
    get:
      summary: List backup jobs
      description: Returns a list of backup jobs with optional filtering
      tags:
        - Backup
      parameters:
        - name: status
          in: query
          description: Filter by job status
          schema:
            type: string
            enum: [pending, running, completed, failed, cancelled]
        - name: type
          in: query
          description: Filter by backup type
          schema:
            type: string
            enum: [full, incremental, differential]
        - name: limit
          in: query
          description: Maximum number of jobs to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: Number of jobs to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Backup jobs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/BackupJob'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

  /api/backup/jobs/{jobId}:
    get:
      summary: Get specific backup job
      description: Returns detailed information about a specific backup job
      tags:
        - Backup
      parameters:
        - name: jobId
          in: path
          required: true
          description: Backup job identifier
          schema:
            type: string
      responses:
        '200':
          description: Backup job details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  job:
                    $ref: '#/components/schemas/BackupJob'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Cancel backup job
      description: Cancels a running backup job
      tags:
        - Backup
      parameters:
        - name: jobId
          in: path
          required: true
          description: Backup job identifier
          schema:
            type: string
      responses:
        '200':
          description: Backup job cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Backup job cancelled"

  /api/backup/restore:
    post:
      summary: Restore from backup
      description: Initiates a restore operation from a specific backup
      tags:
        - Backup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - backupId
              properties:
                backupId:
                  type: string
                  description: Backup identifier to restore from
                target:
                  type: string
                  description: Specific target to restore (optional)
                options:
                  type: object
                  properties:
                    overwrite:
                      type: boolean
                      default: false
                      description: Whether to overwrite existing data
                    verify:
                      type: boolean
                      default: true
                      description: Whether to verify restore integrity
      responses:
        '200':
          description: Restore operation started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  restoreId:
                    type: string
                    example: "restore-job-456"
                  status:
                    type: string
                    example: "running"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    JWTPayload:
      type: object
      properties:
        sessionId:
          type: string
          description: Session identifier
        userId:
          type: string
          description: User identifier
        clientId:
          type: string
          description: Client identifier
        permissions:
          type: array
          items:
            type: string
          description: List of permissions
        iat:
          type: integer
          description: Issued at timestamp
        exp:
          type: integer
          description: Expiration timestamp
        iss:
          type: string
          description: Token issuer

    BackupJob:
      type: object
      properties:
        id:
          type: string
          example: "backup-job-123"
        type:
          type: string
          enum: [full, incremental, differential]
        status:
          type: string
          enum: [pending, running, completed, failed, cancelled]
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        duration:
          type: integer
          description: Duration in milliseconds
        size:
          type: integer
          description: Backup size in bytes
        progress:
          type: number
          minimum: 0
          maximum: 100
          description: Completion percentage
        error:
          type: string
          description: Error message if failed
        metadata:
          type: object
          properties:
            targets:
              type: array
              items:
                type: string
            compression:
              type: string
            encryption:
              type: boolean

    Pagination:
      type: object
      properties:
        total:
          type: integer
          description: Total number of items
        limit:
          type: integer
          description: Number of items per page
        offset:
          type: integer
          description: Number of items skipped
        hasMore:
          type: boolean
          description: Whether there are more items

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        details:
          type: object
          description: Additional error details

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error: "Invalid request parameters"
            code: "BAD_REQUEST"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error: "Resource not found"
            code: "NOT_FOUND"

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error: "Internal server error"
            code: "INTERNAL_ERROR"

tags:
  - name: Authentication
    description: WebSocket authentication and token management
  - name: Backup
    description: Backup and restore operations
  - name: Monitoring
    description: System monitoring and metrics