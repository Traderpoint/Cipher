# Cipher Production Environment Configuration
# SECURITY WARNING: Never commit this file with real values to version control
# Copy this template and populate with actual production values

# ====================
# APPLICATION SETTINGS
# ====================
NODE_ENV=production
CIPHER_LOG_LEVEL=info
REDACT_SECRETS=true
PORT=3000

# API Configuration
CIPHER_API_PREFIX=""
CIPHER_MULTI_BACKEND=1
CIPHER_WAL_FLUSH_INTERVAL=5000

# ====================
# SECURITY CONFIGURATION
# ====================
# Generate secure random strings for production:
# openssl rand -base64 32

# JWT Secret (required) - generate with: openssl rand -base64 64
JWT_SECRET=your-super-secure-jwt-secret-here-minimum-32-characters

# Encryption key for sensitive data - generate with: openssl rand -base64 32
CIPHER_ENCRYPTION_KEY=your-encryption-key-here-32-characters

# Session secret - generate with: openssl rand -base64 32
SESSION_SECRET=your-session-secret-here

# CORS settings
CORS_ORIGIN=https://your-domain.com
CORS_CREDENTIALS=true

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ====================
# API KEYS - PRODUCTION
# ====================
# At least one AI provider API key is required
OPENAI_API_KEY=your-production-openai-api-key
ANTHROPIC_API_KEY=your-production-anthropic-api-key
GEMINI_API_KEY=your-production-gemini-api-key
VOYAGE_API_KEY=your-production-voyage-api-key

# Optional providers
OPENROUTER_API_KEY=your-openrouter-api-key
QWEN_API_KEY=your-alibaba-cloud-api-key
DEEPSEEK_API_KEY=your-deepseek-api-key

# ====================
# DATABASE CONFIGURATION
# ====================
STORAGE_DATABASE_TYPE=postgresql
POSTGRES_DB=cipherdb
POSTGRES_USER=cipheruser
POSTGRES_PASSWORD=your-secure-postgres-password
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
CIPHER_PG_URL=postgres://cipheruser:your-secure-postgres-password@postgres:5432/cipherdb

# ====================
# CACHE CONFIGURATION
# ====================
STORAGE_CACHE_TYPE=redis
STORAGE_CACHE_HOST=redis
STORAGE_CACHE_PORT=6379
STORAGE_CACHE_PASSWORD=your-secure-redis-password
STORAGE_CACHE_DATABASE=0

# Redis connection settings
REDIS_PASSWORD=your-secure-redis-password
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY=1000

# ====================
# VECTOR STORE CONFIGURATION
# ====================
VECTOR_STORE_TYPE=pgvector
VECTOR_STORE_COLLECTION=knowledge_memory
VECTOR_STORE_DIMENSION=1536
VECTOR_STORE_DISTANCE=Cosine

# Alternative: Qdrant configuration
# VECTOR_STORE_TYPE=qdrant
# VECTOR_STORE_HOST=qdrant
# VECTOR_STORE_PORT=6333
# VECTOR_STORE_API_KEY=your-qdrant-api-key

# Alternative: Pinecone configuration
# VECTOR_STORE_TYPE=pinecone
# PINECONE_API_KEY=your-pinecone-api-key
# PINECONE_ENVIRONMENT=your-pinecone-environment
# PINECONE_INDEX_NAME=cipher-knowledge

# ====================
# MONITORING & LOGGING
# ====================
# Enable comprehensive monitoring
ENABLE_METRICS=true
METRICS_PORT=9464

# Logging configuration
LOG_LEVEL=info
LOG_FORMAT=json
LOG_MAX_SIZE=50m
LOG_MAX_FILES=10
LOG_COMPRESS=true

# Error tracking (Sentry)
SENTRY_DSN=your-sentry-dsn-here
SENTRY_ENVIRONMENT=production
SENTRY_RELEASE=${VERSION}

# Performance monitoring
ENABLE_PERFORMANCE_MONITORING=true
PERFORMANCE_SAMPLING_RATE=0.1

# ====================
# BACKUP CONFIGURATION
# ====================
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=your-backup-bucket
BACKUP_AWS_ACCESS_KEY_ID=your-backup-aws-access-key
BACKUP_AWS_SECRET_ACCESS_KEY=your-backup-aws-secret-key
BACKUP_AWS_REGION=us-east-1

# ====================
# SSL/TLS CONFIGURATION
# ====================
# SSL certificates (if not using reverse proxy)
SSL_CERT_PATH=/app/ssl/cert.pem
SSL_KEY_PATH=/app/ssl/key.pem
FORCE_HTTPS=true

# ====================
# EMAIL CONFIGURATION
# ====================
# For alerts and notifications
SMTP_HOST=your-smtp-host
SMTP_PORT=587
SMTP_USER=your-smtp-user
SMTP_PASSWORD=your-smtp-password
SMTP_FROM=noreply@your-domain.com

# ====================
# GRAFANA CONFIGURATION
# ====================
GRAFANA_PASSWORD=your-secure-grafana-password

# ====================
# HEALTH CHECK CONFIGURATION
# ====================
HEALTH_CHECK_INTERVAL=30000
HEALTH_CHECK_TIMEOUT=5000
HEALTH_CHECK_ENABLED=true

# ====================
# SEARCH CONFIGURATION
# ====================
SEARCH_MEMORY_TYPE=both
ENABLE_QUERY_REFINEMENT=true

# Web search (disable in production for security)
WEB_SEARCH_ENABLE=false
WEB_SEARCH_ENGINE=duckduckgo
WEB_SEARCH_SAFETY_MODE=strict
WEB_SEARCH_MAX_RESULTS=2
WEB_SEARCH_RATE_LIMIT=10

# ====================
# MEMORY CONFIGURATION
# ====================
REFLECTION_VECTOR_STORE_COLLECTION=reflection_memory
DISABLE_REFLECTION_MEMORY=false

# ====================
# MCP CONFIGURATION
# ====================
MCP_GLOBAL_TIMEOUT=30000

# ====================
# AWS CONFIGURATION (if using AWS services)
# ====================
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
AWS_DEFAULT_REGION=us-east-1

# ====================
# AZURE CONFIGURATION (if using Azure services)
# ====================
AZURE_OPENAI_API_KEY=your-azure-openai-api-key
AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com
AZURE_OPENAI_API_VERSION=2024-10-01-preview

# ====================
# EVENT MANAGEMENT
# ====================
EVENT_FILTERING_ENABLED=true
EVENT_FILTERED_TYPES=tool:executionStarted,tool:executionCompleted
EVENT_PERSISTENCE_ENABLED=true
EVENT_PERSISTENCE_PATH=/app/.cipher/events

# ====================
# DEPLOYMENT METADATA
# ====================
BUILD_DATE=${BUILD_DATE}
VCS_REF=${VCS_REF}
VERSION=${VERSION}